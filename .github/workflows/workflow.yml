# took from https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml

name: QCS build and test

on:
  push:
    branches: [ ]
  pull_request:
    branches: [ "!master" ]

jobs:
  configure:
    name: Configure
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ ubuntu-latest, windows-latest ]
        build_type: [ Release ]
        c_compiler: [ gcc ]
        include:
          - os: windows-latest
            c_compiler: gcc
            cpp_compiler: g++
            artifact_name: qcs-windows
            binary_name: qcs.exe
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            artifact_name: qcs-ubuntu
            binary_name: qcs

    steps:
      - uses: actions/checkout@v4

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}
          -DHUNTER_MSVC_VERSION="16"

  build:
    name: Build
    needs: configure
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      - name: Collect binaries
        run: >
          mkdir -p binaries
          cp ${{ steps.strings.outputs.build-output-dir }}/qcs* binaries/

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: binaries/*
          if-no-files-found: error
          retention-days: 5

  test:
    name: Test
    needs: build
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ./tests
